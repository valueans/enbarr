version: '3.8'

services:
  nginx:
    build: 
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - 80:80
      - 443:443
    restart: always
    depends_on:
      - web
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
  web:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    command: /start
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - redis
      - db
  db:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: enbarr_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data:Z
      - postgres_data_backups:/backups:z
    ports:
      - 5432:5432
    env_file:
      - ./.env

  redis:
    image: redis:latest

  celery_worker:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: enbarr_celery_worker
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - db

  celery_beat:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: enbarr_celery_beat
    command: /start-celerybeat
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - db

  flower:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: enbarr_celery_flower
    command: /start-flower
    volumes:
      - .:/app
    env_file:
      - ./.env
    ports:
      - 5555:5555
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
  static_volume:
  postgres_data_backups: